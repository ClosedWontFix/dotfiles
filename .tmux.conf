# -*- tmux -*-
# vim: ft=tmux
#
# File: ~/.tmux.conf
# Author: Dan Borkowski
#

# Capture OS
run-shell 'tmux setenv -g TMUX_OS $(uname -s)'

# Capture tmux version
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'

# remap prefix from 'C-b' to 'C-a'
set-option -g prefix C-a
bind-key C-a send-prefix
unbind C-b

# Open/split new window (tab) in the active pane's directory
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind %
unbind '"'

# reload config file
bind r source-file ~/.tmux.conf \; display "Reloaded!"
unbind R

# Enable mouse
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' {
    set -g mouse on

}{
    set -g mode-mouse on
    set -g mouse-select-pane on
    set -g mouse-resize-pane on
    set -g mouse-select-window on

}

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' {
    set -g utf8 on
    set -g status-utf8 on
    set -g mouse-utf8 on

}

#Default word-separators "!\"#$%&'()*+,-./:;<=>?@[\\]^`{|}~"
#set -g word-separators "!\"#$%&'()*+,/:;<=>?@[\\]^`{|}~"
set -g word-separators '`~!@#$%^&*()=+:;<>,{}[]|"'"'"''

# switch panes using Alt-vikeys
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R

# Set vi as the default editor
set -g mode-keys vi
set -g status-keys vi
set-window-option -g mode-keys vi

##### Copy/paste: system clipboard + vi copy-mode + mouse middle-click

# Choose a system clipboard command per-OS/env and store in a tmux option
if-shell 'uname | grep -q Darwin' \
  'set -g @copy_cmd "pbcopy"' \
  'if-shell "command -v wl-copy >/dev/null 2>&1" \
      "set -g @copy_cmd \"wl-copy\"" \
      "if-shell \"command -v xclip >/dev/null 2>&1\" \
          \"set -g @copy_cmd \\\"xclip -sel clip -i\\\"\" \
          \"set -g @copy_cmd \\\"xsel -ib\\\"\""'

# vi-style yank -> system clipboard (and exit copy-mode)
bind-key -T copy-mode-vi y      send -X copy-pipe-and-cancel "#{@copy_cmd}"
bind-key -T copy-mode-vi Enter  send -X copy-pipe-and-cancel "#{@copy_cmd}"

# Mouse selection in copy-mode: copy to system clipboard on drag-end
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "#{@copy_cmd}"

# Middle-click inside a pane pastes the tmux buffer (traditional tmux paste)
bind -n MouseDown2Pane paste-buffer

# (Optional) On tmux >= 3.2, also enable tmux↔terminal clipboard sync (OSC 52)
if-shell -b 'v=$(tmux -V | sed -E "s/[^0-9.]*//g"); maj=${v%%.*}; rem=${v#*.}; min=${rem%%.*}; \
  [ "$maj" -gt 3 ] || { [ "$maj" -eq 3 ] && [ "${min:-0}" -ge 2 ]; }' \
  'set -g set-clipboard on'

setw -g clock-mode-colour yellow

# Enable RGB colour if running in xterm(1)
# set -sa terminal-overrides ",xterm*:Tc"
# set -sa terminal-overrides ",rxvt*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "tmux-256color"

# Start window numbering at 1
set -g base-index 1
set -gw pane-base-index 1

# Renumber windows as they close
set -g renumber-windows on

# set -g history-limit 1000000

# Enable session locking
# set -g lock-command 'vlock -c'
# set -g lock-after-time 0 # Seconds; 0 = never
# bind L lock-session

# set -g visual-activity on
# set -gw monitor-activity on
# setw -g monitor-activity on

# bind-key S setw synchronize-panes

# copy mode
setw -g mode-style 'fg=colour0 bg=colour1 bold'

# panes
set -g pane-border-style 'fg=colour1'
set -g pane-active-border-style 'fg=colour227'

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.3" | bc)" = 1 ]' \
  "set -g automatic-rename on; \
   set -g status-interval 1; \
   set -g automatic-rename-format '#(~/.config/tmux/scripts/window_name.sh \"#{pane_current_command}\" \"#{pane_pid}\")'"

# Terminal/tab title controlled by tmux
set -g set-titles on
set -g set-titles-string '#S:#I.#P • #{pane_current_command} — #{pane_current_path}'

# statusbar
set -g status on
set -g status-position top
set -g status-justify left

# Customize the status line
set -g status-style '#{?client_prefix,\
fg=colour0 bold bg=colour227,\
fg=colour227 bold bg=colour0}'

set -g status-left '#{?client_prefix,\
#[fg=colour0 bold bg=colour227] #h  #[fg=colour227 bg=colour0] #[fg=colour0 bg=colour227],\
#[fg=colour227 bg=colour0] #h  }'
set -g status-left-length 20

set -g status-right '#{?client_prefix,\
#[fg=colour227 bold bg=colour0]#[fg=colour227 bold bg=colour0] #(~/.tmux/scripts/uptime_load.sh) #[reverse] #(TMUX_BATT_GLYPHS=nerd TMUX_BATT_SHOW_STATE=7 ~/.tmux/scripts/tmux-battery.sh) #[noreverse] %H:%M ,\
#[reverse] #(~/.tmux/scripts/uptime_load.sh) #[noreverse] #(TMUX_BATT_GLYPHS=nerd TMUX_BATT_SHOW_STATE=6 ~/.tmux/scripts/tmux-battery.sh) #[noreverse]#[reverse] %H:%M }'
set -g status-right-length 100

set -g window-status-separator |
setw -g window-status-style 'fg=colour1 bold bg=colour0'
setw -g window-status-format ' #I #[fg=colour15 nobold]#W #[fg=colour227]#F '
setw -g window-status-current-style 'fg=colour0 bg=colour1'
setw -g window-status-current-format ' #[fg=colour227 bold]#I #[fg=colour15]#W #F '
setw -g window-status-bell-style 'fg=colour227 bg=colour1 bold'

# messages
set -g message-style 'fg=colour227 bg=colour1 bold'



